{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\xeno-fde-assignment\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport { fetchOverview, fetchOrders } from \"../services/api\";\nimport MetricsCard from \"../components/MetricsCard\";\nimport TopCustomers from \"../components/TopCustomers\";\nimport RecentOrders from \"../components/RecentOrders\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [overview, setOverview] = useState(null);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const ov = await fetchOverview();\n        setOverview(ov);\n      } catch (err) {\n        console.error(err);\n      }\n      // optional fetch raw orders if endpoint exists\n      try {\n        const ord = await fetchOrders();\n        // ord expected: [{id, order_number, total_price, processed_at, ...}, ...]\n        setOrders(ord.slice(0, 10));\n      } catch (e) {\n        // endpoint may not exist; ignore\n        // console.warn('orders fetch failed', e.message);\n      }\n    })();\n  }, []);\n\n  // Build sample orders-by-date if raw orders available, else empty\n  const ordersByDate = orders.length ? Object.values(orders.reduce((acc, o) => {\n    const d = o.processed_at ? new Date(o.processed_at).toLocaleDateString() : \"Unknown\";\n    if (!acc[d]) acc[d] = {\n      date: d,\n      total: 0,\n      count: 0\n    };\n    acc[d].total += Number(o.total_price || 0);\n    acc[d].count += 1;\n    return acc;\n  }, {})) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24,\n      background: \"#f2f4f8\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: 8\n      },\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"stretch\",\n        gap: 12,\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Customers\",\n        value: overview ? overview.totalCustomers : \"—\",\n        subtitle: \"Total customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Orders\",\n        value: overview ? overview.totalOrders : \"—\",\n        subtitle: \"Total orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Revenue\",\n        value: overview ? `₹${(overview.revenue || 0).toFixed(2)}` : \"—\",\n        subtitle: \"Total revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"2fr 1fr\",\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 12,\n            background: \"#fff\",\n            borderRadius: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Orders by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), ordersByDate.length ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 260,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: ordersByDate,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"total\",\n                stroke: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#666\"\n            },\n            children: \"No orders data available for chart (optional server endpoint needed)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecentOrders, {\n          orders: orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TopCustomers, {\n          customers: overview ? overview.topCustomers : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"eZFIXsqGJ3m22+0rp/RoTLq63uA=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchOverview","fetchOrders","MetricsCard","TopCustomers","RecentOrders","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","_s","overview","setOverview","orders","setOrders","ov","err","console","error","ord","slice","e","ordersByDate","length","Object","values","reduce","acc","o","d","processed_at","Date","toLocaleDateString","date","total","count","Number","total_price","style","padding","background","minHeight","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","title","value","totalCustomers","subtitle","totalOrders","revenue","toFixed","gridTemplateColumns","borderRadius","marginTop","width","height","data","strokeDasharray","dataKey","type","stroke","color","customers","topCustomers","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/xeno-fde-assignment/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fetchOverview, fetchOrders } from \"../services/api\";\r\nimport MetricsCard from \"../components/MetricsCard\";\r\nimport TopCustomers from \"../components/TopCustomers\";\r\nimport RecentOrders from \"../components/RecentOrders\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport default function Dashboard() {\r\n  const [overview, setOverview] = useState(null);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const ov = await fetchOverview();\r\n        setOverview(ov);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      // optional fetch raw orders if endpoint exists\r\n      try {\r\n        const ord = await fetchOrders();\r\n        // ord expected: [{id, order_number, total_price, processed_at, ...}, ...]\r\n        setOrders(ord.slice(0, 10));\r\n      } catch (e) {\r\n        // endpoint may not exist; ignore\r\n        // console.warn('orders fetch failed', e.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Build sample orders-by-date if raw orders available, else empty\r\n  const ordersByDate = orders.length\r\n    ? Object.values(\r\n        orders.reduce((acc, o) => {\r\n          const d = o.processed_at\r\n            ? new Date(o.processed_at).toLocaleDateString()\r\n            : \"Unknown\";\r\n          if (!acc[d]) acc[d] = { date: d, total: 0, count: 0 };\r\n          acc[d].total += Number(o.total_price || 0);\r\n          acc[d].count += 1;\r\n          return acc;\r\n        }, {})\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <div style={{ padding: 24, background: \"#f2f4f8\", minHeight: \"100vh\" }}>\r\n      <h1 style={{ marginBottom: 8 }}>Dashboard</h1>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"stretch\",\r\n          gap: 12,\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n        <MetricsCard\r\n          title=\"Customers\"\r\n          value={overview ? overview.totalCustomers : \"—\"}\r\n          subtitle=\"Total customers\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Orders\"\r\n          value={overview ? overview.totalOrders : \"—\"}\r\n          subtitle=\"Total orders\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Revenue\"\r\n          value={overview ? `₹${(overview.revenue || 0).toFixed(2)}` : \"—\"}\r\n          subtitle=\"Total revenue\"\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"2fr 1fr\", gap: 12 }}>\r\n        <div>\r\n          <div style={{ padding: 12, background: \"#fff\", borderRadius: 8 }}>\r\n            <h3 style={{ marginTop: 0 }}>Orders by Date</h3>\r\n            {ordersByDate.length ? (\r\n              <ResponsiveContainer width=\"100%\" height={260}>\r\n                <LineChart data={ordersByDate}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Line type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            ) : (\r\n              <div style={{ color: \"#666\" }}>\r\n                No orders data available for chart (optional server endpoint\r\n                needed)\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ height: 12 }} />\r\n\r\n          <RecentOrders orders={orders} />\r\n        </div>\r\n\r\n        <div>\r\n          <TopCustomers customers={overview ? overview.topCustomers : []} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,WAAW,QAAQ,iBAAiB;AAC5D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI;QACF,MAAMsB,EAAE,GAAG,MAAMpB,aAAa,CAAC,CAAC;QAChCiB,WAAW,CAACG,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;MACA;MACA,IAAI;QACF,MAAMG,GAAG,GAAG,MAAMvB,WAAW,CAAC,CAAC;QAC/B;QACAkB,SAAS,CAACK,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV;QACA;MAAA;IAEJ,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGT,MAAM,CAACU,MAAM,GAC9BC,MAAM,CAACC,MAAM,CACXZ,MAAM,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IACxB,MAAMC,CAAC,GAAGD,CAAC,CAACE,YAAY,GACpB,IAAIC,IAAI,CAACH,CAAC,CAACE,YAAY,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAC7C,SAAS;IACb,IAAI,CAACL,GAAG,CAACE,CAAC,CAAC,EAAEF,GAAG,CAACE,CAAC,CAAC,GAAG;MAAEI,IAAI,EAAEJ,CAAC;MAAEK,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC;IACrDR,GAAG,CAACE,CAAC,CAAC,CAACK,KAAK,IAAIE,MAAM,CAACR,CAAC,CAACS,WAAW,IAAI,CAAC,CAAC;IAC1CV,GAAG,CAACE,CAAC,CAAC,CAACM,KAAK,IAAI,CAAC;IACjB,OAAOR,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CACP,CAAC,GACD,EAAE;EAEN,oBACEnB,OAAA;IAAK8B,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACrElC,OAAA;MAAI8B,KAAK,EAAE;QAAEK,YAAY,EAAE;MAAE,CAAE;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9CvC,OAAA;MACE8B,KAAK,EAAE;QACLU,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,SAAS;QACrBC,GAAG,EAAE,EAAE;QACPP,YAAY,EAAE;MAChB,CAAE;MAAAD,QAAA,gBAEFlC,OAAA,CAACX,WAAW;QACVsD,KAAK,EAAC,WAAW;QACjBC,KAAK,EAAEzC,QAAQ,GAAGA,QAAQ,CAAC0C,cAAc,GAAG,GAAI;QAChDC,QAAQ,EAAC;MAAiB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFvC,OAAA,CAACX,WAAW;QACVsD,KAAK,EAAC,QAAQ;QACdC,KAAK,EAAEzC,QAAQ,GAAGA,QAAQ,CAAC4C,WAAW,GAAG,GAAI;QAC7CD,QAAQ,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvC,OAAA,CAACX,WAAW;QACVsD,KAAK,EAAC,SAAS;QACfC,KAAK,EAAEzC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC6C,OAAO,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,GAAI;QACjEH,QAAQ,EAAC;MAAe;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvC,OAAA;MAAK8B,KAAK,EAAE;QAAEU,OAAO,EAAE,MAAM;QAAEU,mBAAmB,EAAE,SAAS;QAAER,GAAG,EAAE;MAAG,CAAE;MAAAR,QAAA,gBACvElC,OAAA;QAAAkC,QAAA,gBACElC,OAAA;UAAK8B,KAAK,EAAE;YAAEC,OAAO,EAAE,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEmB,YAAY,EAAE;UAAE,CAAE;UAAAjB,QAAA,gBAC/DlC,OAAA;YAAI8B,KAAK,EAAE;cAAEsB,SAAS,EAAE;YAAE,CAAE;YAAAlB,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/CzB,YAAY,CAACC,MAAM,gBAClBf,OAAA,CAACF,mBAAmB;YAACuD,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAApB,QAAA,eAC5ClC,OAAA,CAACR,SAAS;cAAC+D,IAAI,EAAEzC,YAAa;cAAAoB,QAAA,gBAC5BlC,OAAA,CAACJ,aAAa;gBAAC4D,eAAe,EAAC;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvCvC,OAAA,CAACN,KAAK;gBAAC+D,OAAO,EAAC;cAAM;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxBvC,OAAA,CAACL,KAAK;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACTvC,OAAA,CAACH,OAAO;gBAAAuC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACXvC,OAAA,CAACP,IAAI;gBAACiE,IAAI,EAAC,UAAU;gBAACD,OAAO,EAAC,OAAO;gBAACE,MAAM,EAAC;cAAS;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,gBAEtBvC,OAAA;YAAK8B,KAAK,EAAE;cAAE8B,KAAK,EAAE;YAAO,CAAE;YAAA1B,QAAA,EAAC;UAG/B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENvC,OAAA;UAAK8B,KAAK,EAAE;YAAEwB,MAAM,EAAE;UAAG;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE9BvC,OAAA,CAACT,YAAY;UAACc,MAAM,EAAEA;QAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAENvC,OAAA;QAAAkC,QAAA,eACElC,OAAA,CAACV,YAAY;UAACuE,SAAS,EAAE1D,QAAQ,GAAGA,QAAQ,CAAC2D,YAAY,GAAG;QAAG;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CArGuBD,SAAS;AAAA8D,EAAA,GAAT9D,SAAS;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}